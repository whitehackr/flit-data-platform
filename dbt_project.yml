<<<<<<< HEAD

# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'my_new_project'
=======
name: 'flit_data_platform'
>>>>>>> 21cfd7365d4728c068abd0631ad9f9b3eec797b3
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
<<<<<<< HEAD
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In dbt, the default materialization for a model is a view. This means, when you run 
# dbt run or dbt build, all of your models will be built as a view in your data platform. 
# The configuration below will override this setting for models in the example folder to 
# instead be materialized as tables. Any models you add to the root of the models folder will 
# continue to be built as views. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

models:
  my_new_project:
    # Applies to all files under models/example/
    example:
      +materialized: table
=======
profile: 'flit_data_platform'

# These configurations specify where dbt should look for different types of files.
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["dbt_tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:
  - "target"
  - "dbt_packages"

# Configuring models
models:
  flit_data_platform:
    # Staging layer - clean and standardize raw data
    staging:
      +materialized: view
      +schema: staging  # This allows operationalization of the macro: generate_schema_name
      +tags: ["staging"]
    
    # Intermediate layer - business logic transformations  
    intermediate:
      +materialized: view
      +schema: intermediate
      +tags: ["intermediate"]
    
    # Marts layer - analysis-ready datasets
    marts:
      +materialized: table
      +schema: marts
      core:
        +tags: ["core", "mart"]
      experiments:
        +materialized: table
        +tags: ["experiments", "mart"]
      ml:
        +tags: ["ml", "mart"]

# Global test configuration
tests:
  +store_failures: true
  +severity: warn

# Only essential, project-wide variables here
vars:
  # Dataset references
  raw_dataset: 'flit_raw'
  thelook_dataset: 'bigquery-public-data.thelook_ecommerce'
  
  # Free shipping threshold experiment v1.1.1 date ranges
  free_shipping_threshold_v1_1_1_experiment_start_date: '2024-03-01'
  free_shipping_threshold_v1_1_1_experiment_end_date: '2024-03-16'
  free_shipping_threshold_v1_1_1_baseline_start_date: '2024-01-01'
  free_shipping_threshold_v1_1_1_baseline_end_date: '2024-03-01'
>>>>>>> 21cfd7365d4728c068abd0631ad9f9b3eec797b3
